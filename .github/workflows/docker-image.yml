name: Build, Sign, and Push Docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/developer-platform:latest
          file: ./Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: --progress=plain

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.19.2/trivy_0.19.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.19.2_Linux-64bit.deb

      - name: Scan Docker image for vulnerabilities
        run: |
          trivy image ghcr.io/${{ github.repository_owner }}/developer-platform:latest
      
      - name: Install Netlify CLI
        run: npm install -g netlify-cli
      
      - name: Create or Get Netlify Site ID
        id: netlify-site-testing
        run: |
          SITE_NAME="my-custom-site-name"  # Definiere deinen Site-Namen hier
          SITE_ID=$(netlify sites:list | grep $SITE_NAME | awk '{print $1}')
          if [ -z "$SITE_ID" ]; then
            SITE_ID=$(netlify sites:create --name $SITE_NAME --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} | grep 'Site ID:' | awk '{print $3}')
          fi
          echo "::set-output name=site_id::$SITE_ID"